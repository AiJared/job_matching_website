# Generated by Django 5.2 on 2025-04-20 12:27

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='JobCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
            ],
            options={
                'verbose_name': 'Job Category',
                'verbose_name_plural': 'Job Categories',
            },
        ),
        migrations.CreateModel(
            name='JobPosting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255, verbose_name='job title')),
                ('company_name', models.CharField(max_length=255, verbose_name='company name')),
                ('description', models.TextField(verbose_name='job description')),
                ('requirements', models.TextField(verbose_name='job requirements')),
                ('responsibilities', models.TextField(verbose_name='responsibilities')),
                ('location', models.CharField(max_length=255, verbose_name='location')),
                ('salary_min', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='minimum salary')),
                ('salary_max', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='maximum salary')),
                ('experience_required', models.PositiveIntegerField(default=0, verbose_name='experience required (years)')),
                ('education_level', models.CharField(max_length=100, verbose_name='education level')),
                ('employment_type', models.CharField(max_length=50, verbose_name='employment type')),
                ('status', models.CharField(choices=[('active', 'Active'), ('filled', 'Filled'), ('expired', 'Expired'), ('draft', 'Draft')], default='active', max_length=20, verbose_name='status')),
                ('expiry_date', models.DateField(default=django.utils.timezone.now, verbose_name='expiry date')),
                ('skills_required', models.TextField(verbose_name='skills required')),
                ('embedding_vector', models.BinaryField(blank=True, null=True, verbose_name='job embedding vector')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='jobs', to='dashboards.jobcategory')),
                ('recruiter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_postings', to='accounts.recruiter')),
            ],
            options={
                'verbose_name': 'Job Posting',
                'verbose_name_plural': 'Job Postings',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Resume',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('file', models.FileField(upload_to='resumes/', verbose_name='resume file')),
                ('extracted_text', models.TextField(blank=True, null=True, verbose_name='extracted text')),
                ('skills', models.TextField(blank=True, null=True, verbose_name='skills')),
                ('education', models.TextField(blank=True, null=True, verbose_name='education')),
                ('experience', models.TextField(blank=True, null=True, verbose_name='experience')),
                ('embedding_vector', models.BinaryField(blank=True, null=True, verbose_name='resume embedding vector')),
                ('candidate', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='resume', to='accounts.candidate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='JobApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cover_letter', models.TextField(blank=True, null=True, verbose_name='cover letter')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('reviewing', 'Reviewing'), ('shortlisted', 'Shortlisted'), ('rejected', 'Rejected'), ('interview', 'Interview'), ('offer', 'Offer Extended'), ('hired', 'Hired'), ('declined', 'Declined')], default='pending', max_length=20, verbose_name='status')),
                ('match_score', models.FloatField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='match score')),
                ('recruiter_notes', models.TextField(blank=True, null=True, verbose_name='recruiter notes')),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='accounts.candidate')),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='dashboards.jobposting')),
                ('resume', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='dashboards.resume')),
            ],
            options={
                'verbose_name': 'Job Application',
                'verbose_name_plural': 'Job Applications',
                'ordering': ['-match_score', '-created_at'],
            },
        ),
    ]
